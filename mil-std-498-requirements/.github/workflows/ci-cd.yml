name: MIL-STD-498 CI/CD Pipeline

on:
  push:
    branches: [ main, master, develop ]
    paths: [ '**/*.md', '**/*.sh', '**/*.yml', '**/*.yaml' ]
  pull_request:
    branches: [ main, master ]
    paths: [ '**/*.md', '**/*.sh', '**/*.yml', '**/*.yaml' ]

jobs:
  validate-documents:
    name: Validate MIL-STD-498 Documents
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        
    - name: Install markdown tools
      run: |
        npm install -g markdownlint-cli
        npm install -g markdown-link-check
        
    - name: Validate markdown syntax
      run: |
        markdownlint **/*.md --config .markdownlint.json || true
        
    - name: Check for broken links
      run: |
        find . -name "*.md" -exec markdown-link-check {} \; || true
        
    - name: Validate requirement format
      run: |
        # Check for proper requirement structure
        if ! grep -r "shall" **/*.md; then
          echo "Warning: No 'shall' statements found in requirements"
        fi
        
    - name: Check document count
      run: |
        echo "Validating document count..."
        doc_count=$(ls *.md | grep -v README.md | wc -l)
        echo "Found $doc_count MIL-STD-498 documents"
        if [ "$doc_count" -lt 20 ]; then
          echo "Warning: Expected at least 20 MIL-STD-498 documents"
        fi

  generate-outputs:
    name: Generate Document Outputs
    runs-on: ubuntu-latest
    needs: validate-documents
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Install dependencies
      run: |
        sudo apt update
        sudo apt install -y pandoc texlive texlive-latex-base texlive-latex-recommended texlive-latex-extra
        
    - name: Make scripts executable
      run: |
        chmod +x generate_all_outputs.sh generate_output.sh validate_requirements.sh
        
    - name: Generate all document outputs
      run: |
        ./generate_all_outputs.sh
        
    - name: Verify outputs
      run: |
        echo "Checking generated outputs..."
        output_dirs=$(find output -type d | wc -l)
        output_files=$(find output -type f | wc -l)
        echo "Generated $output_dirs directories and $output_files files"
        
    - name: Upload generated documents
      uses: actions/upload-artifact@v4
      with:
        name: mil-std-498-documents
        path: output/
        retention-days: 30

  security-scan:
    name: Security Scan
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Run Trivy vulnerability scanner
      uses: aquasecurity/trivy-action@master
      with:
        scan-type: 'fs'
        scan-ref: '.'
        format: 'sarif'
        output: 'trivy-results.sarif'
        severity: 'CRITICAL,HIGH'
        
    - name: Upload Trivy scan results to GitHub Security tab
      uses: github/codeql-action/upload-sarif@v3
      if: always()
      with:
        sarif_file: 'trivy-results.sarif'
        
    - name: Check for sensitive information
      run: |
        echo "Scanning for sensitive information..."
        if grep -i -r "password\|secret\|key\|token\|api_key" **/*.md; then
          echo "Warning: Potential sensitive information found in documents"
          echo "Please review and remove if necessary"
        else
          echo "No sensitive information detected"
        fi
        
    - name: Check file permissions
      run: |
        echo "Checking file permissions..."
        chmod +x generate_all_outputs.sh generate_output.sh validate_requirements.sh
        echo "Scripts made executable"

  quality-check:
    name: Quality Check
    runs-on: ubuntu-latest
    needs: [validate-documents, generate-outputs]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Check document structure
      run: |
        echo "Checking MIL-STD-498 document structure..."
        
        # Check for required sections
        for file in *.md; do
          if [ "$file" != "README.md" ]; then
            echo "Checking $file..."
            if ! grep -q "## 1. Scope" "$file"; then
              echo "Warning: $file missing Scope section"
            fi
            if ! grep -q "## 2. Referenced Documents" "$file"; then
              echo "Warning: $file missing Referenced Documents section"
            fi
          fi
        done
        
    - name: Check for TODO comments
      run: |
        echo "Checking for TODO comments..."
        if grep -r "TODO" **/*.md; then
          echo "Warning: TODO comments found in documents"
        else
          echo "No TODO comments found"
        fi

  deploy:
    name: Deploy to GitHub Pages
    runs-on: ubuntu-latest
    needs: [validate-documents, generate-outputs, security-scan, quality-check]
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Download generated documents
      uses: actions/download-artifact@v4
      with:
        name: mil-std-498-documents
        path: output/
        
    - name: Deploy to GitHub Pages
      uses: peaceiris/actions-gh-pages@v3
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        publish_dir: ./output
        destination_dir: ./

  notify:
    name: Notify Results
    runs-on: ubuntu-latest
    needs: [validate-documents, generate-outputs, security-scan, quality-check]
    if: always()
    
    steps:
    - name: Notify on failure
      if: failure()
      run: |
        echo "❌ MIL-STD-498 CI/CD pipeline failed"
        echo "Check the workflow logs for details"
        
    - name: Notify on success
      if: success()
      run: |
        echo "✅ MIL-STD-498 CI/CD pipeline completed successfully"
        echo "Documents validated, generated, and deployed" 